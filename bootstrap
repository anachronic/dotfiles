#!/bin/sh

backupdir=$(mktemp -d "/tmp/ach-install.XXXX")

backupfile() {
    if [ -e "$1" ] && [ ! -L "$1" ]
    then
        mv "$1" "$backupdir/$(basename "$1")"
    fi
}

common() {
    echo "Running common setup"

    mkdir -p ~/.config
    mkdir -p ~/.local/bin

    backupfile "$HOME/.bashrc"
    backupfile "$HOME/.bash_logout"
    backupfile "$HOME/.bash_profile"

    stow -v -R -t "$HOME" -d "$HOME/dotfiles/common" link
}

macos() {
    echo "I want to run -> curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh | bash"
    printf "Are you sure? [y/n] "
    read -r ans

    if [ "$ans" = "y" ]
    then
        curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh | bash
    else
        echo "skipping homebrew installation"
    fi

    # links
    mkdir -p ~/.config/karabiner
    stow -v -R -t "$HOME" -d "$HOME/dotfiles/macos" link

    # us-altgr-intl for macos
    sudo -k mkdir -p "/Library/Keyboard Layouts"
    kbpath="$PWD/macos/kblayout/us-intl-altgr-dead.bundle"

    sudo -k cp -r "$kbpath" "/Library/Keyboard Layouts/"
    echo "keyboard okidoki"

    # defaults
    defaults write com.apple.dock autohide -bool true
    defaults write com.apple.dock mru-spaces -bool false
    defaults write -g InitialKeyRepeat -int 20
    defaults write -g KeyRepeat -int 2
    defaults write com.apple.finder ShowPathbar -int 1

    defaults write com.apple.menuextra.clock "DateFormat" -string "EEE d MMM  HH:mm"

    killall Dock
    echo "dock okidoki"

    # terminfo
    mkdir -p ~/.terminfo
    for file in "$HOME/dotfiles/macos/terminfo"/*.terminfo
    do
        tic -x -o ~/.terminfo "$file"
    done
    echo "terminfo okidoki"

    # brewfile should go here sometime
}

archlinux() {
    # first install deps

    if ! command -V stow > /dev/null 2>&1
    then
        echo "Installing stow"
        sudo -k pacman -S stow
    fi

    common

    stow -v -R -t "$HOME" -d "$HOME/dotfiles/arch" link

    # pacman official
    echo "Installing arch packages"
    # shellcheck disable=SC2024
    sudo pacman -S --needed - < "$HOME/dotfiles/arch/pacman/official"

    # need rust to build paru
    rustup default stable

    if ! command -V paru > /dev/null 2>&1
    then
        cd /tmp || return
        rm -rf paru paru.tar.gz
        wget "https://aur.archlinux.org/cgit/aur.git/snapshot/paru.tar.gz"
        tar zxvf paru.tar.gz
        cd paru || return
        makepkg -si
    fi

    cd "$HOME/dotfiles" || return

    echo "Paru installed"
    echo "Going now with paru packages"

    paru -S --needed - < "$HOME/dotfiles/arch/pacman/aur"

    # install dwm
    cd /tmp || return
    rm -rf /tmp/dwm
    git clone https://github.com/anachronic/dwm.git
    cd dwm || return
    echo "Installing dwm"
    sudo -k make clean install

    # install dmenu
    cd /tmp || return
    rm -rf /tmp/dmenu
    git clone https://github.com/anachronic/dmenu.git
    cd dmenu || return
    echo "Installing dmenu"
    sudo -k make clean install

    # go back to dotfiles
    cd "$HOME/dotfiles" || return
}

sysname=$(uname)
if [ "$sysname" = "Linux" ]
then
    echo Installing archlinux module
    archlinux
fi

if [ "$sysname" = "Darwin" ]
then
    echo Installing macOS module
    macos
fi

echo "Done. Backed up files can be checked in $backupdir"
